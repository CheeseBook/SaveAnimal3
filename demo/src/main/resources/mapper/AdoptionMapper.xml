<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.AdoptionMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.domain.Adoption" >
    <id column="adoption_id" property="adoptionId" jdbcType="INTEGER" />
    <result column="animal_id" property="animalId" jdbcType="INTEGER" />
    <result column="apply_name" property="applyName" jdbcType="VARCHAR" />
    <result column="apply_email" property="applyEmail" jdbcType="VARCHAR" />
    <result column="apply_tele" property="applyTele" jdbcType="VARCHAR" />
    <result column="apply_reason" property="applyReason" jdbcType="VARCHAR" />
    <result column="apply_status" property="applyStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    adoption_id, animal_id, apply_name, apply_email, apply_tele, apply_reason, apply_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_adoption
    where adoption_id = #{adoptionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_adoption
    where adoption_id = #{adoptionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.Adoption" >
    insert into t_adoption (adoption_id, animal_id, apply_name, 
      apply_email, apply_tele, apply_reason, 
      apply_status)
    values (#{adoptionId,jdbcType=INTEGER}, #{animalId,jdbcType=INTEGER}, #{applyName,jdbcType=VARCHAR}, 
      #{applyEmail,jdbcType=VARCHAR}, #{applyTele,jdbcType=VARCHAR}, #{applyReason,jdbcType=VARCHAR}, 
      #{applyStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.Adoption" >
    insert into t_adoption
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adoptionId != null" >
        adoption_id,
      </if>
      <if test="animalId != null" >
        animal_id,
      </if>
      <if test="applyName != null" >
        apply_name,
      </if>
      <if test="applyEmail != null" >
        apply_email,
      </if>
      <if test="applyTele != null" >
        apply_tele,
      </if>
      <if test="applyReason != null" >
        apply_reason,
      </if>
      <if test="applyStatus != null" >
        apply_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adoptionId != null" >
        #{adoptionId,jdbcType=INTEGER},
      </if>
      <if test="animalId != null" >
        #{animalId,jdbcType=INTEGER},
      </if>
      <if test="applyName != null" >
        #{applyName,jdbcType=VARCHAR},
      </if>
      <if test="applyEmail != null" >
        #{applyEmail,jdbcType=VARCHAR},
      </if>
      <if test="applyTele != null" >
        #{applyTele,jdbcType=VARCHAR},
      </if>
      <if test="applyReason != null" >
        #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="applyStatus != null" >
        #{applyStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.Adoption" >
    update t_adoption
    <set >
      <if test="animalId != null" >
        animal_id = #{animalId,jdbcType=INTEGER},
      </if>
      <if test="applyName != null" >
        apply_name = #{applyName,jdbcType=VARCHAR},
      </if>
      <if test="applyEmail != null" >
        apply_email = #{applyEmail,jdbcType=VARCHAR},
      </if>
      <if test="applyTele != null" >
        apply_tele = #{applyTele,jdbcType=VARCHAR},
      </if>
      <if test="applyReason != null" >
        apply_reason = #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="applyStatus != null" >
        apply_status = #{applyStatus,jdbcType=INTEGER},
      </if>
    </set>
    where adoption_id = #{adoptionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.Adoption" >
    update t_adoption
    set animal_id = #{animalId,jdbcType=INTEGER},
      apply_name = #{applyName,jdbcType=VARCHAR},
      apply_email = #{applyEmail,jdbcType=VARCHAR},
      apply_tele = #{applyTele,jdbcType=VARCHAR},
      apply_reason = #{applyReason,jdbcType=VARCHAR},
      apply_status = #{applyStatus,jdbcType=INTEGER}
    where adoption_id = #{adoptionId,jdbcType=INTEGER}
  </update>
</mapper>